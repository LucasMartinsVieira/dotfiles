#!/usr/bin/env bash

# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.
# shellcheck disable=SC1091

### AUTO START
riverctl spawn "dunst"
riverctl spawn "eww daemon"
riverctl spawn "eww open-many bar0 bar1"
riverctl spawn "wl-paste --type text --watch cliphist store"
riverctl spawn "wl-paste --type image --watch cliphist store"
riverctl spawn "swww init"
riverctl spawn "wallpaper ~/Pictures/Wallpapers/ --randomize"
riverctl spawn "wlsunset -t 3400 -T 3401"
riverctl spawn "display_select"
riverctl spawn "wlr-randr --output eDP-1 --mode 1920x1080 --pos 1920,0 --transform normal --output HDMI-A-1 --preferred --mode 1920x1080 --pos 0,0 --transform normal"

# BINDS
# Applications
riverctl map normal Super Return spawn kitty
riverctl map normal Super R spawn "rofi -show drun -show-icons"
riverctl map normal Super B spawn firefox
riverctl map normal Super P spawn "kitty -e fish -c lf"

# ON/OFF Services
riverctl map normal Super+Alt N spawn "$HOME/.local/bin/on-off -n"
riverctl map normal Super+Alt B spawn "$HOME/.local/bin/on-off -b"
riverctl map normal Super+Alt W spawn "$HOME/.local/bin/on-off -w"

# Interfaces
riverctl map normal Super+Control P spawn "eww open-many --toggle powermenu0 powermenu1"
riverctl map normal Super+Control Y spawn "eww open-many --toggle bar0 bar1"

# Wallpaper
riverctl map normal Super+Shift W spawn "wallpaper ~/Pictures/Wallpapers/"
riverctl map normal Super+Control W spawn "wallpaper ~/Pictures/Wallpapers/ --random"

# Bookmarks
riverctl map normal Super+Shift B spawn "bookmark -b"
riverctl map normal Super+Control B spawn "bookmark -B"

# Others
riverctl map normal Super E spawn "rofi -show emoji"
riverctl map normal Super C spawn "colorscheme"
riverctl map normal Super V spawn "display_select -v"
riverctl map normal Super+Shift P spawn "rofi-pass"

# Reload river configuration
riverctl map normal Super+Shift R spawn "$HOME/.config/river/init"

# Super+Shift+C to close the focused view
riverctl map normal Super+Shift C close

# Super+Shift+Q to exit river
riverctl map normal Super+Control Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Control+J and Super+Control+K to focus the next/previous output
riverctl map normal Super+Control J focus-output next
riverctl map normal Super+Control K focus-output previous

# Super+Shift+O to send the focused view to the next/previous output
riverctl map normal Super O send-to-output next
riverctl map normal Super+Shift O send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
# riverctl map normal Super Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{W,D,S,A} to change layout orientation
riverctl map normal Super W send-layout-cmd rivertile "main-location top"
riverctl map normal Super D send-layout-cmd rivertile "main-location right"
riverctl map normal Super S send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super A send-layout-cmd rivertile "main-location left"

# Cycle through tags
# riverctl map normal Super bracketleft spawn "cycle-focused-tags previous 6"
# riverctl map normal Super bracketright spawn "cycle-focused-tags next 6"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Volume
    riverctl map $mode None XF86AudioRaiseVolume  spawn "$HOME/.local/bin/volume --inc"
    riverctl map $mode None XF86AudioLowerVolume  spawn "$HOME/.local/bin/volume --dec"
    riverctl map $mode None XF86AudioMute         spawn "$HOME/.local/bin/volume --toggle"
    d
    riverctl map $mode Super Equal                spawn "$HOME/.local/bin/volume --inc"
    riverctl map $mode Super Minus                spawn "$HOME/.local/bin/volume --dec"
    riverctl map $mode Super 0                    spawn "$HOME/.local/bin/volume --toggle"

    # Media
    riverctl map $mode None XF86AudioPlay         spawn "playerctl play-pause"
    riverctl map $mode None XF86AudioStop         spawn "playerctl pause"
    riverctl map $mode None XF86AudioNext         spawn "playerctl next"
    riverctl map $mode None XF86AudioPrev         spawn "playerctl previous"

    riverctl map $mode Super Semicolon            spawn "playerctl play-pause"
    riverctl map $mode Super Period               spawn "playerctl next"
    riverctl map $mode Super Comma                spawn "playerctl previous"

    # Microphone
    riverctl map $mode Super+Control Equal        spawn "$HOME/.local/bin/volume --inc_mic"
    riverctl map $mode Super+Control Minus        spawn "$HOME/.local/bin/volume --dec_mic"
    riverctl map $mode Super+Control 0            spawn "$HOME/.local/bin/volume --toggle_mic"

    # Brightness
    riverctl map $mode None XF86MonBrightnessUp   spawn "$HOME/.local/bin/brightness --inc"
    riverctl map $mode None XF86MonBrightnessDown spawn "$HOME/.local/bin/brightness --dec"
    
    riverctl map $mode Super+Shift Equal          spawn "$HOME/.local/bin/brightness --inc"
    riverctl map $mode Super+Shift Minus          spawn "$HOME/.local/bin/brightness --dec"

    # Print 
    riverctl map $mode None Print                 spawn "$HOME/.local/bin/screenshot --full"

    riverctl map $mode Super I                    spawn  "$HOME/.local/bin/screenshot --full"
    riverctl map $mode Super+Shift I              spawn  "$HOME/.local/bin/screenshot --area"
    riverctl map $mode Super+Control I            spawn  "$HOME/.local/bin/screenshot --window"

    # Others
    riverctl map $mode None XF86AudioMicMute      spawn "$HOME/.local/bin/volume --toggle_mic"
done

# TAGS
for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+T to focus all tags
# Super+Shift+T to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super T set-focused-tags $all_tags
riverctl map normal Super+Shift T set-view-tags $all_tags

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20 ))

# Toggle the scratchpad with Super+P
riverctl map normal Super Y toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal Super+Shift Y set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

### RULES

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add float -app-id 'float*' -title 'foo'

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add csd -app-id "bar"

# Make all borders visible
riverctl rule-add ssd

### GENERAL

# Set background and border color
riverctl background-color 0x011627
riverctl border-color-focused 0xc792ea
riverctl border-color-unfocused 0x0595959
riverctl border-width 3
riverctl border-color-urgent 0xfc514e

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Set keyboard layout
riverctl keyboard-layout -variant intl, -options grp:shifts_toggle,lv3:ratl_switch,ctrl:swapcaps "us,br"

# Mouse focus follow
riverctl focus-follows-cursor normal

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
riverctl spawn "rivertile -view-padding 6 -outer-padding 6"
