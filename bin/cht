#!/bin/bash

declare -a languages=( 
  "javascript"
  "rust"
  "golang"
  "lua"
  "dart"
  "python"
  "bash"
  "html"
  "css"
  "cpp"
  "c"
)

declare -a commands=( 
  "xargs"
  "tr"
  "awk"
  "sed"
  "find"
  "man"
  "sed"
  "ls"
  "grep"
  "rg"
  "ps"
  "mv"
  "kill"
  "killall"
  "less"
  "head"
  "tail"
  "tar"
  "cp"
  "cd"
  "rm"
  "cat"
  "ssh"
  "cargo"
  "git"
  "git-worktree"
  "git-status"
  "git-commit"
  "git-rebase"
  "chmod"
  "chown"
  "make"
)

# Help Function
help() {
     printf 'cht [options]\n
    -h\tDisplays this help menu
    -l\tLanguages 
    -c\tCore Utils'
}

VARIABLE="$2"

# Core Utils
# NOTE: You can pass a environment variable or not. if you pass(example: cht -c xargs) it will work, if you don't pass a fzf screen will appear.
core_util() {
  if [ "$VARIABLE" ]; then
    printf "curl -sf cht.sh/%s" "$VARIABLE"
    curl -sf cht.sh/"$VARIABLE" | bat
  else
    SELECTED=$(printf '%s\n' "${commands[@]}" | sort | fzf --header="Choose a option") || exit 1
    curl -sf cht.sh/"$SELECTED" | bat
  fi
}

# Programming Languages
# NOTE: You can pass a environment variable or not. if you pass(example: cht -l rust) it will work, if you don't pass a fzf screen will appear and then you can pass your query.

languages() {
  if [[ "$VARIABLE" ]]; then
    printf "curl -sf cht.sh/%s" "$VARIABLE"
    curl -sf cht.sh/"$VARIABLE/:list"
    curl -sf cht.sh/"$VARIABLE/:lean"
  else
    SELECTED=$(printf '%s\n' "${languages[@]}" | sort | fzf --header="Choose a Programming Language") || exit 1
    read -rp "Enter Query for $SELECTED: " query
    curl -sf cht.sh/"$SELECTED"/"$query" | bat
  fi
}

# Environment Variables
while getopts "hcl" arg 2>/dev/null; do
    case "${arg}" in
        h) help ;;
        c) core_util ;;
        l) languages ;;
      *) help 
    esac
done
