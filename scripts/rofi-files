#!/usr/bin/env bash
#
# Script name: dm-confedit
# Description: Choose from a list of configuration files to edit.
# Dependencies: dmenu, emacsclient
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#               Simon Ingelsson
#               HostGrady

declare -A edit_list
edit_list[Awesome]="$HOME/.config/awesome/rc.lua"
edit_list[Bash]="$HOME/.bashrc"
edit_list[Fish]="$HOME/.config/config.fish"
edit_list[Kitty]="$HOME/.config/kitty/kitty.conf"
edit_list[Neovim]="$HOME/.config/nvim/init.lua"
edit_list[Picom]="$HOME/.config/picom/picom.conf"
edit_list[Ranger]="$HOME/.config/ranger/rc.conf"
edit_list[Qutebrowser]="$HOME/.config/qutebrowser/config.py"
edit_list[Zathura]="$HOME/.config/zathura/zathurarc"

DMEDITOR="kitty -e nvim"

main() {
  # Clean options array making sure that the files exist
  declare -A _clean_list
  # As this is loaded from other file it is technically not defined
  # shellcheck disable=SC2154
  for i in "${!edit_list[@]}"; do
    [[ -f ${edit_list["${i}"]} ]] && _clean_list["${i}"]=${edit_list["${i}"]}
  done

  # Piping the above array (cleaned) into dmenu.
  # We use "printf '%s\n'" to format the array one item to a line.
  choice=$(printf '%s\n' "${!_clean_list[@]}" | sort | rofi -dmenu -i -p 'Edit config:' "$@")

  # What to do when/if we choose a file to edit.
  if [ "$choice" ]; then
    cfg=$(printf '%s\n' "${_clean_list["${choice}"]}")
    # shellcheck disable=SC2154
    $DMEDITOR "$cfg"
  # What to do if we just escape without choosing anything.
  else
      echo "Program terminated." && exit 0
  fi
}

main 
